---
import DashboardLayout from "@/layouts/DashboardLayout.astro";
import Header from "./_components/Header";
import PageContainer from "@/components/PageContainer";
import { Heading } from "@/components/Heading";
import { stringToDate } from "@/lib/utils/utils";
import { serverApiService, type ApiResponse } from "@/lib/utils/api";
import { CONSTANTS, ROUTES } from "@/lib/utils/constants";
import ViewAsAdmin from "./_components/ViewAsAdmin";

const { pageTitle } = Astro.props;

const { pathname } = Astro.url;

if(!Astro.locals.user){
  Astro.cookies.delete(CONSTANTS.ACCESS_TOKEN_KEY)
  Astro.cookies.delete(CONSTANTS.REFRESH_TOKEN_KEY)
  Astro.cookies.delete(CONSTANTS.USER)

  return Astro.redirect('/auth')
}

const currentTab =
  pathname === "/admin/dashboard"
    ? "Overview"
    : pathname === "/admin/dashboard/cities"
      ? "Cities"
      : "Hotels";

const fromTime = Astro.url.searchParams.get("fromTime") || "";
const toTime = Astro.url.searchParams.get("toTime") || "";

let fromDate = stringToDate(fromTime);
let toDate = stringToDate(toTime);

if (!fromDate || !toDate) {
  toDate = new Date();
  //from date is 6 months before to date
  const sixMonthsAgo = new Date(toDate);
  sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);
  fromDate = new Date(sixMonthsAgo.getFullYear(), sixMonthsAgo.getMonth(), 1);
}

// Fetch hotels for ViewAsAdmin component
const hotelsResponse: ApiResponse<any> = await serverApiService.get(
  ROUTES.GET_ALL_HOTELS_ROUTE,
  Astro.cookies.get(CONSTANTS.ACCESS_TOKEN_KEY)?.value || "",
  Astro.cookies
);

const hotels = hotelsResponse.success ? hotelsResponse.data : [];
const currentUser = Astro.locals.user 

let dashboardTabs = [
    {
      value: "Overview",
      action: "/admin/dashboard",
    }
  ];
  
  // Only show Cities and Hotels tabs for super admin (not when viewing as hotel admin)
  if (Astro.locals.user.role === "super_admin") {
    dashboardTabs.push(
      {
        value: "Cities",
        action: "/admin/dashboard/cities",
      },
      {
        value: "Hotels",
        action: "/admin/dashboard/hotels",
      }
    );
  }
  

console.log('currentUser ',currentUser)
---

<DashboardLayout title={pageTitle}>
  <!-- <PageContainer> -->
  <div class="p-4 md:px-8">
    <Heading
      title={"Dashboard"}
      description="these are useful for adding tags to products"
    />
    <div class="space-y-4">
      <div class="flex justify-between items-center">
        <div class="flex items-center gap-4">
          <div id="dashboard-tabs"></div>
        </div>
        <div class="flex items-center gap-4">
          {currentUser.role === "super_admin" && (
            <ViewAsAdmin hotels={hotels} currentUser={currentUser} client:load />
          )}
          <div id="date-picker"></div>
        </div>
      </div>
    </div>
    <slot />
  </div>
  <!-- </PageContainer> -->
</DashboardLayout>


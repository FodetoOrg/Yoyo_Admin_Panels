---
import Layout from '../_layout.astro';
import HotelDashboard from './_components/HotelDashboard';
import HotelSelector from './_components/HotelSelector';
import { serverApiService, type ApiResponse } from "@/lib/utils/api";
import { CONSTANTS, ROUTES } from "@/lib/utils/constants";

// Fetch hotels data
const hotelsResponse: ApiResponse<any> = await serverApiService.get(
  ROUTES.GET_ALL_HOTELS_ROUTE,
  Astro.cookies.get(CONSTANTS.ACCESS_TOKEN_KEY)?.value || "",
  Astro.cookies
);

const hotels = hotelsResponse.success ? hotelsResponse.data : [];
const selectedHotel = Astro.url.searchParams.get("hotel") || (hotels[0]?.id || "");
// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout title="Dashboard">
  <div class="space-y-4">
    <HotelSelector 
      hotels={hotels} 
      selectedHotel={selectedHotel}
      onHotelChange={(hotelId) => {
        const url = new URL(window.location);
        url.searchParams.set('hotel', hotelId);
        window.location.href = url.toString();
      }}
      client:load 
    />
    <HotelDashboard selectedHotel={selectedHotel} hotels={hotels} client:load />
  </div>
</Layout>

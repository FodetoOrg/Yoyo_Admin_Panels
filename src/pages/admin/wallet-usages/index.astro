---
import DashboardLayout from "@/layouts/DashboardLayout.astro";
import Screen from "./_components/screen";
import {
  apiService,
  serverApiService,
  type ApiResponse,
} from "@/lib/utils/api";
import { CONSTANTS, ROUTES } from "@/lib/utils/constants";

const { searchParams } = Astro.url;
const page = parseInt(searchParams.get("page") || "1");
const limit = parseInt(searchParams.get("limit") || "20");

let walletUsagesData = {
  walletUsages: [],
  pagination: { page: 1, limit: 20, total: 0, pages: 0 },
};

try {
  const response: ApiResponse<any> = await serverApiService.get(
    `${ROUTES.WALLET_USAGES_ROUTE}`,
    Astro.cookies.get(CONSTANTS.ACCESS_TOKEN_KEY)?.value || "",
    Astro.cookies,
  );
  console.log("response in wallet usages ", JSON.stringify(response));
  if (response.success) {
    walletUsagesData = response.data;
  }
} catch (error) {
  console.error("Error fetching wallet usages:", error);
}

const currentUser = Astro.locals.user;
---

<DashboardLayout title="Wallet Usages">
  <Screen
    walletUsages={walletUsagesData.walletUsagesDb}
    pagination={walletUsagesData.pagination}
    currentUser={currentUser}
    client:load
  />
</DashboardLayout>

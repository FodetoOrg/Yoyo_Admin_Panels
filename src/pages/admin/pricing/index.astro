---
import DashboardLayout from "../../../layouts/DashboardLayout.astro";
import Screen from "./_components/screen";
import { UserRole } from "@/lib/utils/auth";
import { serverApiService, type ApiResponse } from "@/lib/utils/api";
import { CONSTANTS, ROUTES } from "@/lib/utils/constants";

// Check if user has permission (middleware already authenticated)
const currentUser = Astro.locals.user;
if (!currentUser || currentUser.role !== UserRole.SUPER_ADMIN) {
  return Astro.redirect('/admin/dashboard');
}

// Fetch cities, hotels, and room types for pricing adjustments
const citiesResponse: ApiResponse<any> = await serverApiService.get(
  ROUTES.GET_CITIES_ROUTE,
  Astro.cookies.get(CONSTANTS.ACCESS_TOKEN_KEY)?.value || "",
  Astro.cookies
);

const hotelsResponse: ApiResponse<any> = await serverApiService.get(
  ROUTES.GET_ALL_HOTELS_ROUTE,
  Astro.cookies.get(CONSTANTS.ACCESS_TOKEN_KEY)?.value || "",
  Astro.cookies
);

const roomTypesResponse: ApiResponse<any> = await serverApiService.get(
  ROUTES.GET_ROOM_TYPES_ROUTE,
  Astro.cookies.get(CONSTANTS.ACCESS_TOKEN_KEY)?.value || "",
  Astro.cookies
);

const cities = citiesResponse.success ? citiesResponse.data : [];
const hotels = hotelsResponse.success ? hotelsResponse.data : [];
const roomTypes = roomTypesResponse.success ? roomTypesResponse.data : [];
---

<DashboardLayout title="Dynamic Pricing">
  <Screen 
    cities={cities}
    hotels={hotels}
    roomTypes={roomTypes}
    client:load 
  />